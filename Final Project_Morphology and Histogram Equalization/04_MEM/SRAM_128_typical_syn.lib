/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2022 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      UMC.  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  SRAM_128
 *      Words:          64
 *      Word Width:     128
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2022-12-29 06:51:06Z
 *      Version:        2001Q4V0
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2022-12-29 06:51:06Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2022 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.800;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
        default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.0035;
	default_input_pin_cap		: 0.0035;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 4.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.00021;
	k_temp_cell_rise		: 0.00021;
	k_temp_hold_fall                : 0.00021;
	k_temp_hold_rise                : 0.00021;
	k_temp_min_pulse_width_high     : 0.00021;
	k_temp_min_pulse_width_low      : 0.00021;
	k_temp_min_period               : 0.00021;
	k_temp_rise_propagation         : 0.00021;
	k_temp_fall_propagation         : 0.00021;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.00021;
	k_temp_recovery_rise            : 0.00021;
	k_temp_setup_fall               : 0.00021;
	k_temp_setup_rise               : 0.00021;
	k_volt_cell_fall                : -0.64417;
	k_volt_cell_rise                : -0.64417;
	k_volt_hold_fall                : -0.64417;
	k_volt_hold_rise                : -0.64417;
	k_volt_min_pulse_width_high     : -0.64417;
	k_volt_min_pulse_width_low      : -0.64417;
	k_volt_min_period               : -0.64417;
	k_volt_rise_propagation         : -0.64417;
	k_volt_fall_propagation         : -0.64417;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : -0.64417;
	k_volt_recovery_rise            : -0.64417;
	k_volt_setup_fall               : -0.64417;
	k_volt_setup_rise               : -0.64417;
	operating_conditions(typical) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.800;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : typical;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(SRAM_128_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004");
               index_2 ("1000, 1001, 1002, 1003, 1004");
        }
	lu_table_template(SRAM_128_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004");
               index_2 ("1000, 1001, 1002, 1003, 1004");
        }
	lu_table_template(SRAM_128_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004");
        }
        power_lut_template(SRAM_128_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (SRAM_128_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 128;
		bit_from : 127;
		bit_to : 0 ;
		downto : true ;
	}
	type (SRAM_128_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 6;
		bit_from : 5;
		bit_to : 0 ;
		downto : true ;
	}
cell(SRAM_128) {
	area		 : 206458.329;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 6;
		word_width : 128;
	}
	bus(Q)	 {
		bus_type : SRAM_128_DATA;
		direction : output;
		max_capacitance : 2.222;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(SRAM_128_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ( \
			  "1.345, 1.438, 1.535, 1.726, 2.107", \
			  "1.377, 1.470, 1.567, 1.758, 2.139", \
			  "1.440, 1.534, 1.631, 1.821, 2.202", \
			  "1.567, 1.661, 1.758, 1.948, 2.329", \
			  "1.647, 1.741, 1.837, 2.028, 2.409" \
			)
			}
			rise_transition(SRAM_128_load_template) {
			index_1 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ("0.057, 0.258, 0.465, 0.873, 1.689")
			}
			cell_fall(SRAM_128_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ( \
			  "1.349, 1.408, 1.468, 1.588, 1.827", \
			  "1.381, 1.439, 1.500, 1.620, 1.858", \
			  "1.444, 1.503, 1.564, 1.683, 1.922", \
			  "1.572, 1.630, 1.691, 1.810, 2.049", \
			  "1.651, 1.710, 1.771, 1.890, 2.129" \
			)
			}
			fall_transition(SRAM_128_load_template) {
			index_1 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ("0.030, 0.139, 0.253, 0.475, 0.920")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(SRAM_128_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ( \
			  "0.713, 0.727, 0.824, 1.015, 1.396", \
			  "0.715, 0.770, 0.867, 1.058, 1.439", \
			  "0.763, 0.856, 0.953, 1.144, 1.525", \
			  "0.935, 1.029, 1.126, 1.316, 1.697", \
			  "1.043, 1.136, 1.233, 1.424, 1.805" \
			)
                       }
			rise_transition(SRAM_128_load_template) {
			index_1 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ("0.057, 0.258, 0.465, 0.873, 1.689")
			}
			cell_fall(SRAM_128_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ( \
			  "0.713, 0.713, 0.713, 0.809, 1.048", \
			  "0.715, 0.715, 0.732, 0.852, 1.091", \
			  "0.719, 0.758, 0.819, 0.938, 1.177", \
			  "0.871, 0.930, 0.991, 1.110, 1.349", \
			  "0.979, 1.038, 1.099, 1.218, 1.457" \
			)
			}
			fall_transition(SRAM_128_load_template) {
			index_1 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ("0.030, 0.139, 0.253, 0.475, 0.920")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(SRAM_128_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ( \
			  "0.713, 0.727, 0.824, 1.015, 1.396", \
			  "0.715, 0.770, 0.867, 1.058, 1.439", \
			  "0.763, 0.856, 0.953, 1.144, 1.525", \
			  "0.935, 1.029, 1.126, 1.316, 1.697", \
			  "1.043, 1.136, 1.233, 1.424, 1.805" \
			)
                       }
			rise_transition(SRAM_128_load_template) {
			index_1 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ("0.057, 0.258, 0.465, 0.873, 1.689")
			}
			cell_fall(SRAM_128_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ( \
			  "0.713, 0.713, 0.713, 0.809, 1.048", \
			  "0.715, 0.715, 0.732, 0.852, 1.091", \
			  "0.719, 0.758, 0.819, 0.938, 1.177", \
			  "0.871, 0.930, 0.991, 1.110, 1.349", \
			  "0.979, 1.038, 1.099, 1.218, 1.457" \
			)
			}
			fall_transition(SRAM_128_load_template) {
			index_1 ("0.022, 0.292, 0.572, 1.122, 2.222");
			values ("0.030, 0.139, 0.253, 0.475, 0.920")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.338
		clock	: true;
		min_pulse_width_low	: 0.141;
		min_pulse_width_high	: 0.078;
		min_period		: 1.218;
		max_transition		: 4.000;
		internal_power(){
			when : "CEN";
			power(SRAM_128_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
	    			values ("0.000, 0.000")
			}	
		}
		internal_power(){
			when : "!CEN & WEN";
        		power(SRAM_128_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("434.127, 434.127")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			power(SRAM_128_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("491.247, 491.247")
			}	
		}
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.017;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.348, 0.346, 0.342, 0.455, 0.535", \
			  "0.316, 0.314, 0.310, 0.423, 0.503", \
			  "0.253, 0.251, 0.247, 0.360, 0.439", \
			  "0.125, 0.123, 0.119, 0.232, 0.312", \
			  "0.046, 0.044, 0.040, 0.153, 0.232" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.348, 0.346, 0.342, 0.455, 0.535", \
			  "0.316, 0.314, 0.310, 0.423, 0.503", \
			  "0.253, 0.251, 0.247, 0.360, 0.439", \
			  "0.125, 0.123, 0.119, 0.232, 0.312", \
			  "0.046, 0.044, 0.040, 0.153, 0.232" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.006, 0.010, 0.018, 0.023", \
			  "0.068, 0.070, 0.074, 0.082, 0.087", \
			  "0.195, 0.197, 0.201, 0.209, 0.214", \
			  "0.274, 0.276, 0.280, 0.289, 0.294" \
			)
				
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.006, 0.010, 0.018, 0.023", \
			  "0.068, 0.070, 0.074, 0.082, 0.087", \
			  "0.195, 0.197, 0.201, 0.209, 0.214", \
			  "0.274, 0.276, 0.280, 0.289, 0.294" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.009;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.483, 0.520, 0.593, 0.741, 0.833", \
			  "0.451, 0.488, 0.562, 0.709, 0.801", \
			  "0.387, 0.424, 0.498, 0.645, 0.738", \
			  "0.260, 0.297, 0.371, 0.518, 0.610", \
			  "0.181, 0.217, 0.291, 0.439, 0.531" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.483, 0.520, 0.593, 0.741, 0.833", \
			  "0.451, 0.488, 0.562, 0.709, 0.801", \
			  "0.387, 0.424, 0.498, 0.645, 0.738", \
			  "0.260, 0.297, 0.371, 0.518, 0.610", \
			  "0.181, 0.217, 0.291, 0.439, 0.531" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.049, 0.012, 0.000, 0.000, 0.000", \
			  "0.176, 0.139, 0.065, 0.032, 0.023", \
			  "0.256, 0.219, 0.145, 0.111, 0.103" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.049, 0.012, 0.000, 0.000, 0.000", \
			  "0.176, 0.139, 0.065, 0.032, 0.023", \
			  "0.256, 0.219, 0.145, 0.111, 0.103" \
			)
	}	}	}

	bus(A)  {
		bus_type : SRAM_128_ADDRESS;
		direction : input;
		capacitance : 0.042;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.268, 0.261, 0.295, 0.411, 0.483", \
			  "0.236, 0.229, 0.263, 0.379, 0.451", \
			  "0.173, 0.166, 0.199, 0.315, 0.388", \
			  "0.045, 0.039, 0.072, 0.188, 0.261", \
			  "0.000, 0.000, 0.000, 0.108, 0.181" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.268, 0.261, 0.295, 0.411, 0.483", \
			  "0.236, 0.229, 0.263, 0.379, 0.451", \
			  "0.173, 0.166, 0.199, 0.315, 0.388", \
			  "0.045, 0.039, 0.072, 0.188, 0.261", \
			  "0.000, 0.000, 0.000, 0.108, 0.181" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.056, 0.063, 0.077, 0.104, 0.121", \
			  "0.088, 0.095, 0.108, 0.135, 0.152", \
			  "0.152, 0.158, 0.172, 0.199, 0.216", \
			  "0.279, 0.286, 0.299, 0.326, 0.343", \
			  "0.358, 0.365, 0.379, 0.406, 0.423" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.056, 0.063, 0.077, 0.104, 0.121", \
			  "0.088, 0.095, 0.108, 0.135, 0.152", \
			  "0.152, 0.158, 0.172, 0.199, 0.216", \
			  "0.279, 0.286, 0.299, 0.326, 0.343", \
			  "0.358, 0.365, 0.379, 0.406, 0.423" \
			)
	}	}	}
	bus(D)	 {
		bus_type : SRAM_128_DATA;
		direction : input;
		capacitance : 0.005;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.191, 0.182, 0.284, 0.503, 0.640", \
			  "0.159, 0.150, 0.252, 0.471, 0.608", \
			  "0.095, 0.087, 0.188, 0.408, 0.545", \
			  "0.000, 0.000, 0.061, 0.281, 0.418", \
			  "0.000, 0.000, 0.000, 0.201, 0.338" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.191, 0.182, 0.284, 0.503, 0.640", \
			  "0.159, 0.150, 0.252, 0.471, 0.608", \
			  "0.095, 0.087, 0.188, 0.408, 0.545", \
			  "0.000, 0.000, 0.061, 0.281, 0.418", \
			  "0.000, 0.000, 0.000, 0.201, 0.338" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.000, 0.000, 0.000, 0.019", \
			  "0.088, 0.033, 0.026, 0.061, 0.082", \
			  "0.215, 0.160, 0.154, 0.188, 0.209", \
			  "0.294, 0.240, 0.233, 0.267, 0.289" \
			)
			}
			fall_constraint(SRAM_128_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.000, 0.000, 0.000, 0.019", \
			  "0.088, 0.033, 0.026, 0.061, 0.082", \
			  "0.215, 0.160, 0.154, 0.188, 0.209", \
			  "0.294, 0.240, 0.233, 0.267, 0.289" \
			)
		}	}
	}

	cell_leakage_power : 0.000;
  }
}
